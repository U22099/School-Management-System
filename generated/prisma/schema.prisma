generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("VERCEL_DATABASE_URL")
}

model User {
  id       String @id @default(uuid()) // Use UUID for primary key
  email    String @unique
  role     Role
  schoolId String

  // Relations
  school School @relation(fields: [schoolId], references: [id])

  Parent Parent[] @relation("ParentToChildren")
}

model Staff {
  id            String  @id @default(uuid()) // Use UUID for primary key
  name          String
  oracleNo      String
  designation   String
  post          String
  payrollNo     String
  level         String
  yearOfService String
  teaching      Boolean
  address       String
  phoneNo       String
  yearOfExit    String?
  schoolId      String

  // Relations
  school School @relation(fields: [schoolId], references: [id])

  Class Class[]
}

model Parent {
  id       String @id @default(uuid()) // Use UUID for primary key
  name     String
  phoneNo  String
  address  String
  schoolId String

  // Relations
  school   School @relation(fields: [schoolId], references: [id])
  children User[] @relation("ParentToChildren")

  Student Student[]
}

model Student {
  id             String   @id @default(uuid()) // Use UUID for primary key
  name           String
  parentId       String?
  registrationNo String
  admissionNo    String
  birthdate      DateTime
  gender         String
  DOA            DateTime // Date of Admission
  classId        String
  address        String
  schoolId       String

  // Relations
  school School  @relation(fields: [schoolId], references: [id])
  parent Parent? @relation(fields: [parentId], references: [id])
  class  Class   @relation(fields: [classId], references: [id])

  Attendance Attendance[]
}

model School {
  id               String   @id @default(uuid()) // Use UUID for primary key
  name             String
  address          String
  primaryColor     String
  secondaryColor   String
  mutedColor       String
  accentColor      String
  logo             String // Image URL
  missionStatement String
  visionStatement  String
  principal        String
  vicePrincipal    String
  slogan           String
  subjects         String[]

  // Relations
  users       User[]
  staffs      Staff[]
  parents     Parent[]
  students    Student[]
  classes     Class[]
  timetables  Timetable[]
  attendances Attendance[]
}

model Class {
  id        String @id @default(uuid()) // Use UUID for primary key
  name      String
  teacherId String
  schoolId  String

  // Relations
  school     School       @relation(fields: [schoolId], references: [id])
  teacher    Staff        @relation(fields: [teacherId], references: [id])
  students   Student[]
  Attendance Attendance[]

  Timetable Timetable[]
}

model Timetable {
  id         String   @id @default(uuid()) // Use UUID for primary key
  day        String // e.g., Monday, Tuesday
  startTime  DateTime
  endTime    DateTime
  classId    String
  subject    String
  period     Int
  periodSpan Int
  schoolId   String

  // Relations
  school School @relation(fields: [schoolId], references: [id])
  class  Class  @relation(fields: [classId], references: [id])
}

model Attendance {
  id        String   @id @default(uuid()) // Use UUID for primary key
  date      DateTime
  status    String // e.g., Present, Absent
  schoolId  String
  studentId String
  classId   String

  // Relations
  school  School  @relation(fields: [schoolId], references: [id])
  student Student @relation(fields: [studentId], references: [id])
  class   Class   @relation(fields: [classId], references: [id])
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
  PARENT
}
