generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String    @unique
  password       String
  role           Role // Enum to distinguish user roles
  schoolId       String?   @db.ObjectId
  classId        String?   @db.ObjectId
  parentId       String?   @db.ObjectId
  oracleNo       String? // Staff-specific property
  registrationNo String? // Student-specific property
  designation    String? // Staff-specific property
  post           String? // Staff-specific property
  payrollNo      String? // Staff-specific property
  level          String? // Staff-specific property
  yearOfExit     String? // Staff-specific property
  address        String?
  phoneNo        String?
  yearOfService  String? // Staff-specific property
  teaching       Boolean? // Staff-specific property
  parentNo       String? // Student-specific property
  parentName     String? // Student-specific property
  DOA            DateTime? // Date of Admission (Student-specific)
  birthdate      DateTime? // Student-specific property
  admissionNo    String? // Student-specific property
  gender         String? // Student-specific property
}

model School {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  address          String
  primaryColor     String
  secondaryColor   String
  mutedColor       String
  accentColor      String
  logo             String // Image URL
  missionStatement String
  visionStatement  String
  principal        String
  vicePrincipal    String
  slogan           String
  subjects         String[]
}

model Class {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  schoolId  String  @db.ObjectId
  teacherId String? @db.ObjectId
}

model Timetable {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  day        String // e.g., Monday, Tuesday
  startTime  DateTime
  endTime    DateTime
  subject    String
  class      String
  period     Int
  periodSpan Int
  schoolId   String   @db.ObjectId
}

model Attendance {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  date      DateTime
  status    String // e.g., Present, Absent
  schoolId  String   @db.ObjectId
  studentId String   @db.ObjectId
  classId   String   @db.ObjectId
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
  PARENT
}
