generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("VERCEL_DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  name             String
  email            String          @unique
  password         String          @default("")
  role             Role
  schoolId         String
  resetToken       String?
  resetTokenExpiry DateTime?
  RefreshTokens    RefreshTokens[]
  school           School          @relation(fields: [schoolId], references: [id])
}

model RefreshTokens {
  id         String   @id @default(uuid())
  userId     String
  tokenHash  String   @unique
  deviceInfo String   @default("")
  ipAddress  String   @default("")
  createdAt  DateTime @default(now())
  expiresOn  DateTime
  lastUsed   DateTime
  user       User     @relation(fields: [userId], references: [id])
}

model Staff {
  id             String  @id @default(uuid())
  name           String
  image          String  @default("")
  email          String
  oracleNo       String
  registrationNo String
  designation    String
  post           String
  payrollNo      String
  level          String
  yearOfService  Int
  teaching       Boolean
  address        String
  phoneNo        String
  yearOfExit     Int
  schoolId       String
  admin          Boolean
  school         School  @relation(fields: [schoolId], references: [id])
}

model Parent {
  id       String    @id @default(uuid())
  email    String
  name     String
  phoneNo  String
  address  String
  schoolId String
  school   School    @relation(fields: [schoolId], references: [id])
  Student  Student[]
}

model Student {
  id             String       @id @default(uuid())
  name           String
  image          String       @default("")
  email          String
  parentId       String
  parentNo       String
  parentName     String
  registrationNo String
  admissionNo    String
  birthdate      String
  gender         Gender
  DOA            String
  class          String
  address        String
  schoolId       String
  Attendance     Attendance[]
  parent         Parent       @relation(fields: [parentId], references: [id])
  school         School       @relation(fields: [schoolId], references: [id])
}

model School {
  id                  String       @id @default(uuid())
  name                String
  address             String
  primaryColor        String       @default("")
  primaryColorLight   String       @default("")
  secondaryColor      String       @default("")
  secondaryColorLight String       @default("")
  accentColor1        String       @default("")
  accentColor1Light   String       @default("")
  accentColor2        String       @default("")
  accentColor2Light   String       @default("")
  accentColor3        String       @default("")
  accentColor3Light   String       @default("")
  logo                String
  missionStatement    String       @default("")
  visionStatement     String       @default("")
  principal           String
  vicePrincipal       String
  slogan              String
  type                SchoolType
  startHour           String
  closeHour           String
  timetableHtml       String
  admins              String[]
  
  attendances         Attendance[]
  classes             Class[]
  parents             Parent[]
  staffs              Staff[]
  students            Student[]
  timetables          Timetable[]
  users               User[]
  events              Event[]
  announcements       Announcement[]
  subjects            Subject[]
}

model Subject {
  id           String       @id @default(uuid())
  name         String
  teachers     String[]          @default([])
  schoolId     String
  school       School       @relation(fields: [schoolId], references: [id])
}


model Class {
  id           String       @id @default(uuid())
  name         String
  totalStudent Int          @default(0)
  classTeacher String
  schoolId     String
  Attendance   Attendance[]
  school       School       @relation(fields: [schoolId], references: [id])
}

model Timetable {
  id         String @id @default(uuid())
  day        String
  startTime  String
  endTime    String
  class      String
  subject    String
  period     Int
  periodSpan Int
  schoolId   String
  school     School @relation(fields: [schoolId], references: [id])
}

model Attendance {
  id        String         @id @default(uuid())
  date      DateTime
  schoolId  String
  studentId String
  classId   String
  status    AttendanceType
  class     Class          @relation(fields: [classId], references: [id])
  school    School         @relation(fields: [schoolId], references: [id])
  student   Student        @relation(fields: [studentId], references: [id])
}

model Event {
  id          String         @id @default(uuid())
  title       String
  description String
  date        DateTime
  startTime   String
  endTime     String
  schoolId    String
  school    School         @relation(fields: [schoolId], references: [id])
}

model Announcement {
  id          String         @id @default(uuid())
  title       String
  description String
  date        DateTime
  schoolId    String
  school    School         @relation(fields: [schoolId], references: [id])
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
  PARENT
}

enum SchoolType {
  PRIMARY
  JUNIOR
  SENIOR
}

enum Gender {
  MALE
  FEMALE
}

enum AttendanceType {
  PRESENT
  ABSENT
}
